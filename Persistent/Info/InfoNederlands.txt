Programmeur:
------------
Verboven Koen 
Vosselaar
Mpad
België

Versie:
---------
Dit programma is geprogrammeerd in Visual Studio Community 2022
Version 17.7.4

Target framework:
.NET8.0

Tips:
-----
Als u een form in design-mode ziet op het scherm,
klik dan op F7 om naar de code-behind te gaan.

druk Ctrl-S voor bewaren file
druk Ctrl-D voor het dupliceren van een lijn code

In code : verwijder de 'using' die niet gebruikt worden (staan in het licht grijs)

Werk sneller met Shortcuts:
handige site met Visual Studio shortcuts:
https://devblogs.microsoft.com/premier-developer/visual-studio-shortcuts-and-add-on-tools/

Volg de naming conventions van Microsoft:
https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/naming-rules

In Visual Studio : zie onderaan tabblad Warnings en Messages:
Los deze warnings en messages weg !

In code : 
let op de inspringingen en lege regels ! Belanrijk
dan krijg je een properder programma.

Gebruik Unit testen !
In dit programma nog niet toegepast maar staat op de doto lijst

Gebruik een goed naamgeving (voor alles variabelen, objecten, ...), kies goed namen:
vermijd bv Button1, dit zegt niets.
Gebruik dan bv ButtonSave

Don't repeat your self.
Als je regelmatig dezelfde code schrijft:
maak deze dan herbruikbaar door hier voor een classe of een functie voor te maken.

zie ook sites :
https://hapy.co/journal/principles-of-coding/
https://www.datacamp.com/tutorial/coding-best-practices-and-guidelines
https://www.geeksforgeeks.org/coding-standards-and-guidelines/

Person.cs
---------
 public class Student : Person
    {
        public DateTime RegistrationDate { get; set; }

        public List<Course> EnrolledCourse { get; set; } // Class Relation ---> Aggregation
    }


GeneralEnums.cs
----------------
Bevat Enums die door gans het programma kunnen gebruikt worden.
Het zijn dus algemene Enums die overal gebruikt kunnen worden.

De Enums SaleryCategorie,HighestDegree en StudyDirection zijn meer specifiek
en worden daarom in de Teacher class gedefineerd


Article.cs
----------
De naam van een classe begint steeds met een hoofletter!

public decimal? ArticlePrice { get; set; }
ArticlePrice hebben we hier nullable gemaakt door een vraagteken
achter decimal te plaatsen.
Als we de prijs van een bepaald artikel niet weten maken de prijs 
gelijk aan null (we weten de prijs dan gewoon niet).

Een property in een klassen maken we aan met de snippet :
tikin : prop 
druk dan op de tab-toets

site met uitleg over Properties:
https://learn.microsoft.com/en-us/dotnet/csharp/programming-guide/classes-and-structs/properties


ArticleBLL.cs
-------------
De constructor 'public ArticleBLL()' maken we aan met de snippet:
tikin : ctor
druk dan op de tab-toets

Onderstaande code behoort in de BLL en NIET in SchoolArticleFormm.cs
Het is Bussiness code !
private string GetArticleMessage(Article article)


TeacherBLL.cs
--------------
object initializer :
new Teacher
{
                        PersonId = 1,
                        Firstname = "Mark",
                        MiddleName = null,
                        LastName = "Verstraaten",
                        StreetAndNumber = "Bloemenweg 5",
                        ZipCode = "5000",
                        PhoneNumber = null,
                        EmailAddress = null,
                        Gender = Gender.Male,
                        DateOfBirth =  new DateTime(1988,9,2),
                        MaritalStatus = MaritalStatus.MarriedWithChilderen,
                        NationalRegisterNumber = 45487487,
                        Nationality = Nationality.Belgian,
                        MoederTongueId = 6,
                        HireDate = new DateTime(2018,9,1),
                        LeaveDate = null,
                        HighestDegree = HighestDegree.HighSchool,
                        StudyDirection = StudyDirection.Chemistry
},


DAL-layer:
----------

Install SystemDataSqlClient:
Ga naar menu
kies project
kies hierin Manage Nuget Packages
zoek naar System.DataSqlClient
install
